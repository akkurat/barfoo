"use strict";
var mongoose = require('mongoose');
function server() {
    var restify = require('restify');
    var restifyMongoose = require('restify-mongoose');
    var server = restify.createServer({
        name: 'restify.mongoose.examples.notes',
        version: '1.0.0'
    });
    server.use(restify.plugins.acceptParser(server.acceptable));
    server.use(restify.plugins.queryParser());
    server.use(restify.plugins.bodyParser());
    // Create a simple mongoose model 'Note'
    var NoteSchema = new mongoose.Schema({
        title: { type: String, required: true },
        date: { type: Date, required: true },
        tags: [String],
        content: { type: String }
    });
    var Note = mongoose.model('notes', NoteSchema);
    // Now create a restify-mongoose resource from 'Note' mongoose model
    var notes = restifyMongoose(Note);
    // Serve resource notes with fine grained mapping control
    server.get('/notes', notes.query());
    server.get('/notes/:id', notes.detail());
    server.post('/notes', notes.insert());
    server.patch('/notes/:id', notes.update());
    server.del('/notes/:id', notes.remove());
    server.listen(3333, function () {
        console.log('%s listening at %s', server.name, server.url);
    });
}
mongoose.connect('mongodb://localhost:27017/test').then(server);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXhfLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vaW5kZXhfLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFDQSxJQUFJLFFBQVEsR0FBRyxPQUFPLENBQUMsVUFBVSxDQUFDLENBQUM7QUFDbkMsU0FBUyxNQUFNO0lBQ2YsSUFBSSxPQUFPLEdBQUcsT0FBTyxDQUFDLFNBQVMsQ0FBQyxDQUFDO0lBQ2pDLElBQUksZUFBZSxHQUFHLE9BQU8sQ0FBQyxrQkFBa0IsQ0FBQyxDQUFDO0lBRWxELElBQUksTUFBTSxHQUFHLE9BQU8sQ0FBQyxZQUFZLENBQUM7UUFDOUIsSUFBSSxFQUFFLGlDQUFpQztRQUN2QyxPQUFPLEVBQUUsT0FBTztLQUNuQixDQUFDLENBQUM7SUFHSCxNQUFNLENBQUMsR0FBRyxDQUFDLE9BQU8sQ0FBQyxPQUFPLENBQUMsWUFBWSxDQUFDLE1BQU0sQ0FBQyxVQUFVLENBQUMsQ0FBQyxDQUFDO0lBQzVELE1BQU0sQ0FBQyxHQUFHLENBQUMsT0FBTyxDQUFDLE9BQU8sQ0FBQyxXQUFXLEVBQUUsQ0FBQyxDQUFDO0lBQzFDLE1BQU0sQ0FBQyxHQUFHLENBQUMsT0FBTyxDQUFDLE9BQU8sQ0FBQyxVQUFVLEVBQUUsQ0FBQyxDQUFDO0lBRXpDLHdDQUF3QztJQUN4QyxJQUFJLFVBQVUsR0FBRyxJQUFJLFFBQVEsQ0FBQyxNQUFNLENBQUM7UUFDakMsS0FBSyxFQUFHLEVBQUUsSUFBSSxFQUFHLE1BQU0sRUFBRSxRQUFRLEVBQUcsSUFBSSxFQUFFO1FBQzFDLElBQUksRUFBRyxFQUFFLElBQUksRUFBRyxJQUFJLEVBQUUsUUFBUSxFQUFHLElBQUksRUFBRTtRQUN2QyxJQUFJLEVBQUcsQ0FBQyxNQUFNLENBQUM7UUFDZixPQUFPLEVBQUcsRUFBRSxJQUFJLEVBQUUsTUFBTSxFQUFFO0tBQzdCLENBQUMsQ0FBQztJQUVILElBQUksSUFBSSxHQUFHLFFBQVEsQ0FBQyxLQUFLLENBQUMsT0FBTyxFQUFFLFVBQVUsQ0FBQyxDQUFDO0lBRS9DLG9FQUFvRTtJQUNwRSxJQUFJLEtBQUssR0FBRyxlQUFlLENBQUMsSUFBSSxDQUFDLENBQUM7SUFFbEMseURBQXlEO0lBQ3pELE1BQU0sQ0FBQyxHQUFHLENBQUMsUUFBUSxFQUFFLEtBQUssQ0FBQyxLQUFLLEVBQUUsQ0FBQyxDQUFDO0lBQ3BDLE1BQU0sQ0FBQyxHQUFHLENBQUMsWUFBWSxFQUFFLEtBQUssQ0FBQyxNQUFNLEVBQUUsQ0FBQyxDQUFDO0lBQ3pDLE1BQU0sQ0FBQyxJQUFJLENBQUMsUUFBUSxFQUFFLEtBQUssQ0FBQyxNQUFNLEVBQUUsQ0FBQyxDQUFDO0lBQ3RDLE1BQU0sQ0FBQyxLQUFLLENBQUMsWUFBWSxFQUFFLEtBQUssQ0FBQyxNQUFNLEVBQUUsQ0FBQyxDQUFDO0lBQzNDLE1BQU0sQ0FBQyxHQUFHLENBQUMsWUFBWSxFQUFFLEtBQUssQ0FBQyxNQUFNLEVBQUUsQ0FBQyxDQUFDO0lBRXpDLE1BQU0sQ0FBQyxNQUFNLENBQUMsSUFBSSxFQUFFO1FBQ2hCLE9BQU8sQ0FBQyxHQUFHLENBQUMsb0JBQW9CLEVBQUUsTUFBTSxDQUFDLElBQUksRUFBRSxNQUFNLENBQUMsR0FBRyxDQUFDLENBQUM7SUFDL0QsQ0FBQyxDQUFDLENBQUM7QUFFSCxDQUFDO0FBR0QsUUFBUSxDQUFDLE9BQU8sQ0FBQyxnQ0FBZ0MsQ0FBQyxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQSIsInNvdXJjZXNDb250ZW50IjpbIlxudmFyIG1vbmdvb3NlID0gcmVxdWlyZSgnbW9uZ29vc2UnKTtcbmZ1bmN0aW9uIHNlcnZlcigpIHtcbnZhciByZXN0aWZ5ID0gcmVxdWlyZSgncmVzdGlmeScpO1xudmFyIHJlc3RpZnlNb25nb29zZSA9IHJlcXVpcmUoJ3Jlc3RpZnktbW9uZ29vc2UnKTtcblxudmFyIHNlcnZlciA9IHJlc3RpZnkuY3JlYXRlU2VydmVyKHtcbiAgICBuYW1lOiAncmVzdGlmeS5tb25nb29zZS5leGFtcGxlcy5ub3RlcycsXG4gICAgdmVyc2lvbjogJzEuMC4wJ1xufSk7XG5cblxuc2VydmVyLnVzZShyZXN0aWZ5LnBsdWdpbnMuYWNjZXB0UGFyc2VyKHNlcnZlci5hY2NlcHRhYmxlKSk7XG5zZXJ2ZXIudXNlKHJlc3RpZnkucGx1Z2lucy5xdWVyeVBhcnNlcigpKTtcbnNlcnZlci51c2UocmVzdGlmeS5wbHVnaW5zLmJvZHlQYXJzZXIoKSk7XG5cbi8vIENyZWF0ZSBhIHNpbXBsZSBtb25nb29zZSBtb2RlbCAnTm90ZSdcbnZhciBOb3RlU2NoZW1hID0gbmV3IG1vbmdvb3NlLlNjaGVtYSh7XG4gICAgdGl0bGUgOiB7IHR5cGUgOiBTdHJpbmcsIHJlcXVpcmVkIDogdHJ1ZSB9LFxuICAgIGRhdGUgOiB7IHR5cGUgOiBEYXRlLCByZXF1aXJlZCA6IHRydWUgfSxcbiAgICB0YWdzIDogW1N0cmluZ10sXG4gICAgY29udGVudCA6IHsgdHlwZTogU3RyaW5nIH1cbn0pO1xuXG52YXIgTm90ZSA9IG1vbmdvb3NlLm1vZGVsKCdub3RlcycsIE5vdGVTY2hlbWEpO1xuXG4vLyBOb3cgY3JlYXRlIGEgcmVzdGlmeS1tb25nb29zZSByZXNvdXJjZSBmcm9tICdOb3RlJyBtb25nb29zZSBtb2RlbFxudmFyIG5vdGVzID0gcmVzdGlmeU1vbmdvb3NlKE5vdGUpO1xuXG4vLyBTZXJ2ZSByZXNvdXJjZSBub3RlcyB3aXRoIGZpbmUgZ3JhaW5lZCBtYXBwaW5nIGNvbnRyb2xcbnNlcnZlci5nZXQoJy9ub3RlcycsIG5vdGVzLnF1ZXJ5KCkpO1xuc2VydmVyLmdldCgnL25vdGVzLzppZCcsIG5vdGVzLmRldGFpbCgpKTtcbnNlcnZlci5wb3N0KCcvbm90ZXMnLCBub3Rlcy5pbnNlcnQoKSk7XG5zZXJ2ZXIucGF0Y2goJy9ub3Rlcy86aWQnLCBub3Rlcy51cGRhdGUoKSk7XG5zZXJ2ZXIuZGVsKCcvbm90ZXMvOmlkJywgbm90ZXMucmVtb3ZlKCkpO1xuXG5zZXJ2ZXIubGlzdGVuKDMzMzMsIGZ1bmN0aW9uICgpIHtcbiAgICBjb25zb2xlLmxvZygnJXMgbGlzdGVuaW5nIGF0ICVzJywgc2VydmVyLm5hbWUsIHNlcnZlci51cmwpO1xufSk7XG5cbn1cblxuXG5tb25nb29zZS5jb25uZWN0KCdtb25nb2RiOi8vbG9jYWxob3N0OjI3MDE3L3Rlc3QnKS50aGVuKHNlcnZlcilcbiJdfQ==